# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: SREChallenge-CI

on:
  push:
    branches: [ "master" ]

env:
  SERVER: dummy-pdf-or-png
  PROJECT_ID: documentkeeper-04
  SERVICE: documentkeeper 
  REGION: europe-southwest1	
  REPOSITORY: images

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Helm tool installer
      uses: Azure/setup-helm@v3
      with:
        version: v3.12.3

    - name: Helm Check Action
      uses: hopisaurus/helm-check-action@v0.1.1
      env:
        # Path to the values.yaml
        CHART_VALUES: sre/DocumentKeeper/k8scharts/app/values.yaml
        # Path to the Chart.yaml
        CHART_LOCATION:  sre/DocumentKeeper/k8scharts/app

    - name: Helm Check Action
      uses: hopisaurus/helm-check-action@v0.1.1
      env:
        # Path to the values.yaml
        CHART_VALUES: sre/dummy-pdf-or-png/k8scharts/app/values.yaml
        # Path to the Chart.yaml
        CHART_LOCATION:  sre/dummy-pdf-or-png/k8scharts/app

    - uses: actions/setup-go@v4
      with:
        go-version: '>=1.17.0'

    - name: Run GO unit tests
      run: | 
        go mod download
        go test ./...
      working-directory: sre/DocumentKeeper/

    # BEGIN - Docker auth and build
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'

    # Authenticate Docker to Google Cloud Artifact Registry
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        username: _json_key
        password: '${{ secrets.GCLOUD_SERVICE_KEY }}'
        registry: '${{ env.REGION }}-docker.pkg.dev'

    - name: Build and Push Container DocumentKeeper
      run: |
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest" ./sre/DocumentKeeper
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest"

    - name: Build and Push Container Dummy PDF or PNG
      run: |
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVER }}:latest" ./sre/dummy-pdf-or-png
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVER }}:latest"
